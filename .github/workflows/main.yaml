# .github/workflows/main.yaml
name: Main

on: [push]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: AutoModality/action-clean@v1
  specs:
    name: CI
    runs-on: ubuntu-18.04

    # If you need DB like MySQL then define service below.
    # Example for PostgreSQL and Redis can be found here:
    # https://github.com/actions/example-services/tree/master/.github/workflows

    # https://help.github.com/en/articles/workflow-syntax-for-github-actions#jobsjob_idstrategymatrix
    strategy:
      fail-fast: false
      matrix:
        # Set N number of parallel jobs you want to run tests on.
        # Use higher number if you have slow tests to split them on more parallel jobs.
        # Remember to update ci_node_index below to 0..N-1
        ci_node_total: [5]
        # set N-1 indexes for parallel jobs
        # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        ci_node_index: [0, 1, 2, 3, 4]
        ruby:
          - '3.0.1'
        include:
          - ruby: '3.0.1'
            coverage: 'true'

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up Ruby 3.0.1
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0.1
        bundle-cache: true

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Install mysql dependencies
      run: |
        sudo apt-get install -y mysql-client libmysqlclient-dev

    - name: Setup MySQL
      env:
        DB_DATABASE: test_db
        DB_USER: root
        DB_PASSWORD: root
      run: |
        sudo /etc/init.d/mysql start
        mysql --host 127.0.0.1 -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

    - name: Bundle Install and Create DB
      env:
        RAILS_ENV: test
        # tell Rails to use proper port for MySQL
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: |
        gem install bundler --version 2.2.29 --no-document
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3 --path vendor/bundle
        # create DB for Rails 6.x
        bin/rails db:prepare

    - name: Run tests
      env:
        DB_PORT: ${{ job.services.mysql.ports[3306] }} # get randomly assigned published port
        RAILS_ENV: test
      run: |
